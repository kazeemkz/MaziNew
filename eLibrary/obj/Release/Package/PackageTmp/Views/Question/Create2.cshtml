@model eLibrary.Model.Question
@{
    ViewBag.Title = "Create";
}

<h4>CREATE TEST QUESTIONS</h4>
@using (Html.BeginForm())
{

    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Create Exam</legend>

        <div class="editor-label">
            <text>Exam Code</text>
        </div>
        <div class="editor-field">
            @Html.ValidationMessageFor(model => model.Exam.ExamCode)
            @Html.DropDownListFor(model => model.Exam.ExamCode, new SelectList(Enumerable.Empty<SelectListItem>()))
            <a href="#" id="CreateExamCode">Create New Exam Code</a>
        </div>

        @*


        <div class="editor-label">
            <text> Subject</text>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(x => x.Exam.CourseID, new SelectList(Enumerable.Empty<SelectListItem>()))
        </div>

        <div class="editor-label">
            <text>Subject</text>
        </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Exam.CourseID, new SelectList(Enumerable.Empty<SelectListItem>()))
        @Html.ValidationMessageFor(model => model.Exam.CourseID)
        @*  <a href="#" id="ViewChapter">View Chapters for Chosen Subject</a>*@


        <div class="editor-label">
            <text>Question Number</text>
        </div>


        <div class="editor-field">
            @*  @Html.EditorFor(model => model.OrderNumber, new { disabled = "disabled", @readonly = "readonly" })
       *@
            @Html.HiddenFor(model => model.OrderNumber)
            @Html.Editor("OrderNumber1", new { style = "width:50px" })
            @Html.ValidationMessageFor(model => model.OrderNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Point)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Point)
            @Html.ValidationMessageFor(model => model.Point)
        </div>

        <div class="editor-label">
            <text>Question Text</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Text, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>


        <div class="editor-label">
            <text>Option A</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Choice1, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div class="editor-label">
            <text>Option B</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Choice2, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div class="editor-label">
            <text>Option C</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Choice3, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div class="editor-label">
            <text>Option D</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Choice4, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>

        <div class="editor-label">
            <text>Option E</text>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Choice5, new { @width = "200px" })
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div class="editor-label">
            <text>Pick the Right Answer</text>
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Answer, "A")A
            @Html.RadioButtonFor(model => model.Answer, "B")B
            @Html.RadioButtonFor(model => model.Answer, "C")C
            @Html.RadioButtonFor(model => model.Answer, "D")D
            @Html.RadioButtonFor(model => model.Answer, "E")E
                     
            @Html.ValidationMessage("rightAnswer")
        </div>

        <div id="ExamCodeCreateDialog" style="overflow: hidden;"></div>
        <div id="CreateCourseDialog" style="overflow: hidden;"></div>
        <div id="ViewChapterDialog" style="overflow: hidden;"></div>
        @* if (ViewBag.Success == "1")
    {
    <div id="dialog" title=" Upload Success Dialog">

        <b>Lesson Note Was Successsfully Uploaded!</b>
    </div>
    }*@


        <p>
            <input type="submit" value="Create Question" />
        </p>

    </fieldset>
}


<div>
    @Html.ActionLink("Back to List", "LoadExamCodes", "Exam")
</div>

@section Scripts {
    @* @Scripts.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/jquery")*@
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $(document).ready(function () {
            var SubjectValue = "";
            var theCheckedValue = "JSS1";

            var theExamCode = '@(ViewBag.ExamCode)';


            //load course based on jss1 value first
            $.get('@Url.Action("LoadExam", "Exam")', { level: theExamCode }, function (data) {
                var ddl = $("#Exam_ExamCode");
                ddl.empty();
                //ddl.append("<option value='" + "" + "'>"
                //       + "Choose...." + "</option>");
                //for (var i = 0; i < data.length; i++) {
                //    ddl.append("<option value='" + data[i].Value + "'>"
                //         + data[i].Text + "</option>");
                //}
                if (theExamCode == "") {
                    ddl.append("<option value='" + "" + "'>"
                           + "Choose...." + "</option>");
                    for (var i = 0; i < data.length; i++) {
                        ddl.append("<option value='" + data[i].Value + "'>"
                             + data[i].Text + "</option>");
                    }
                }
                else {
                    //ddl.append("<option value='" + "" + "'>"
                    //      + "Choose...." + "</option>");
                    for (var i = 0; i < data.length; i++) {
                        ddl.append("<option value='" + data[i].Value + "'>"
                             + data[i].Text + "</option>");
                    }

                    $.get('@Url.Action("LoadNextQuestionNumber", "Exam")', { examCode: data[0].Value }, function (data) {
                        $("#OrderNumber").empty();
                        $("#OrderNumber").val(data);

                        $("#OrderNumber1").empty();
                        $("#OrderNumber1").val(data);



                    });
                }

            });



            $('#Exam_ExamCode').live('change', function (e) {
                var theValue = $('#Exam_ExamCode').val();

                $.get('@Url.Action("LoadNextQuestionNumber", "Exam")', { examCode: theValue }, function (data) {
                    $("#OrderNumber").empty();
                    $("#OrderNumber").val(data);

                    $("#OrderNumber1").empty();
                    $("#OrderNumber1").val(data);

                });
            });



            $("#dialog").dialog().width("350px").css("background-color", "grey");

            $("#CreateExamCode")
   .button()
   .click(function (e) {
       //theLevelVal = $("#Level").val();
       $("#ExamCodeCreateDialog").dialog("open");
       e.preventDefault();

   });

            $("#ExamCodeCreateDialog").dialog({

                autoOpen: false,
                resizable: false,
                width: 600,
                title: "Create Exam",
                modal: true,

                open: function (event, ui) {

                    $(this).load('@Url.Action("CreatePartial", "Exam")');

                },
                buttons: {

                    "Cancel": function () {
                        $(this).dialog("close");
                    }

                }
            });


        });
    </script>
}
